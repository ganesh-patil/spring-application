<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation=" http://www.springframework.org/schema/beans  http://www.springframework.org/schema/beans/spring-beans-3.0.xsd http://www.springframework.org/schema/context  http://www.springframework.org/schema/context/spring-context-3.0.xsd http://www.springframework.org/schema/tx  http://www.springframework.org/schema/tx/spring-tx-4.0.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd"
>
    <mvc:annotation-driven />
    <mvc:default-servlet-handler/>
    <mvc:resources mapping="/resources/**" location="/resources/" />
    <context:component-scan base-package="jbr.springmvc" />
    <context:annotation-config />
    <context:property-placeholder location="classpath*:application.properties"/>
    <tx:annotation-driven transaction-manager="txManager"/>
    <!--  <bean id="userService" class="jbr.springmvc.service.UserService" />  -->
    <bean id="userDao" class="jbr.springmvc.dao.UserDaoImpl" />


    <bean id="userHiberService" class="jbr.springmvc.service.UserHiberService" scope="singleton">
        <property name = "testList">
            <list>
                <value>1</value>
            </list>
        </property>
    </bean>
    <bean id="fileOperationsHiberService" class="jbr.springmvc.service.FileOperationsHiberService" />
    <bean id="userHiberDao" class="jbr.springmvc.dao.UserHiberDaoImpl" />
    <bean id="entriesDao" class="jbr.springmvc.dao.EntriesHiberDaoImpl" />
    <bean id="fileOperationsDao" class="jbr.springmvc.dao.FileOperationsHiberDaoImpl" />
    <bean id="entriesHiberService" class="jbr.springmvc.service.EntriesHiberService" />

    <bean id="appUserDetailsServiceDAO" class="jbr.springmvc.service.AppUserDetailsServiceDAO" />

    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource" ref="datasource" />
    </bean>
    <bean id="datasource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="com.mysql.jdbc.Driver" />
        <property name="url" value="jdbc:mysql://localhost:3306/myspring" />
        <property name="username" value="root" />
        <property name="password" value="root" />

    </bean>

    <bean id="mailService" class="jbr.springmvc.service.MailService" />

    <bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
        <property name="host" value="smtp.sendgrid.net" />
        <property name="port" value="587" />
        <property name="username" value="apikey" />
        <property name="password" value="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" />
        <property name="javaMailProperties">
            <props>
                <prop key="mail.transport.protocol">smtp</prop>
                <prop key="mail.smtp.auth">true</prop>
                <prop key="mail.smtp.starttls.enable">true</prop>
                <prop key="mail.debug">true</prop>
            </props>


        </property>

    </bean>



    <bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean" >
        <property name="dataSource" ref="datasource"/>
        <property name="packagesToScan">
            <list>
                <value>jbr.springmvc.model</value>
            </list>
        </property>
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
                <prop key="hibernate.show_sql">true</prop>
                <prop key="hibernate.format_sql">false</prop>
                <!--<prop key="hibernate.hbm2ddl.auto">create</prop>-->

            </props>
        </property>
    </bean>

    <bean id="txManager"  class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>

    <bean id="persistenceExceptionTranslationPostProcessor"
          class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor"/>

    <bean id="connectionFactoryLocator" class="org.springframework.social.connect.support.ConnectionFactoryRegistry">
        <property name="connectionFactories">
            <list>
                <bean class="org.springframework.social.twitter.connect.TwitterConnectionFactory">
                    <constructor-arg value="${twitter.consumerKey}" />
                    <constructor-arg value="${twitter.consumerSecret}" />
                </bean>
            </list>
        </property>
    </bean>
    <bean id="tweeter" class="org.springframework.social.twitter.api.impl.TwitterTemplate">
        <!--      <constructor-arg value="z8zTGKlBhIBK9Eanhr2ROJRWc" />
              <constructor-arg value="tQ0QID5WJyILAQTd2k0tloXStvDhnrQyFI94ezYtDTCTRnHtHM" />
              <constructor-arg value="1346371116-coFKpQKdVVNeb7sSG4ahMJelbypu3Pe50fzgN9s" />
              <constructor-arg value="GWS4UosEsG5iK9zlP6vWkkqmJye3VteBuDIuQXtxINQV3" />-->

        <constructor-arg value="${twitter.consumerKey}" />
        <constructor-arg value="${twitter.consumerSecret}" />
        <constructor-arg value="${twitter.accessToken}" />
        <constructor-arg value="${twitter.accessTokenSecret}" />

    </bean>

    <bean id="restTemplate" class="org.springframework.web.client.RestTemplate" >
    </bean>

</beans>
